/*  
CREATE OR REPLACE TEMPORARY TABLE OTCHS_STR_SKU AS
SELECT DISTINCT
    A.STORE_NBR,
    A.SKU_NBR
FROM
    CORE_FSSC.CURATED_OTCHS.DAY_PLAN_STORE_SALES_ITEM A
WHERE
    A.PLAN_ID <> 0
    AND A.ORDER_DATE::DATE >= TO_DATE('2024-01-07') 
GROUP BY 1,2
ORDER BY 1,2
; 
*/

CREATE OR REPLACE TEMPORARY TABLE OTCHS_STR_SKU AS
SELECT DISTINCT
    A.*
FROM
    CORE_FSSC.CURATED_OTCHS.BENEFIT_UPC_SKU A
WHERE
    A.YEAR = 2024
    AND A.ACT_IND <> 'N'
; 

------------------------------------------- STORE SALES -------------------------------------------------

CREATE OR REPLACE TEMPORARY TABLE WEEKS AS
SELECT DISTINCT
    START_DT DATE_DT, 
    FISCAL_WEEK_NBR WEEK_NBR
FROM 
    CORE_FSSC.CURATED_CALENDAR.FISCAL_WEEK
WHERE
    START_DT::DATE BETWEEN TO_DATE('2023-12-31') AND TO_DATE('2024-10-05') --DATEADD(day, -1 * (EXTRACT(DAYOFWEEK_ISO FROM CURRENT_DATE()) % 7 + 1), CURRENT_DATE())
order by 1,2
;



CREATE OR REPLACE TEMPORARY TABLE STORE_SALES_RAW_DETAIL AS
SELECT
    A.STORE_NBR,
    B.CATEGORY_NBR,
    B.CATEGORY_DSC,
    A.SKU_NBR,
    A.WEEK_NBR,
    SUM(IFF(A.SCAN_QTY<0,0,A.SCAN_QTY)) ITEMS_QTY
FROM
    CORE_FSSC.CURATED_SALES.POS_WK_EVT_SKU_STR A,
    CORE_FSSC.CURATED_PRODUCT.SKU B,
    WEEKS C

WHERE
    A.SKU_NBR IN (SELECT DISTINCT SKU_NBR FROM OTCHS_STR_SKU)
    AND A.STORE_NBR NOT IN (10735,11458,11511,11512)
    AND A.WEEK_NBR = C.WEEK_NBR
    AND A.SKU_NBR = B.SKU_NBR
GROUP BY 1,2,3,4,5
ORDER BY 1,2,3,4,5
;



CREATE OR REPLACE TEMPORARY TABLE STORE_SALES_RAW AS
SELECT
    A.STORE_NBR,
    A.CATEGORY_NBR,
    A.CATEGORY_DSC, 
    A.WEEK_NBR,
    SUM(A.ITEMS_QTY) ITEMS_QTY
FROM
    STORE_SALES_RAW_DETAIL A
GROUP BY 1,2,3,4
ORDER BY 1,2,3,4
;



CREATE OR REPLACE TEMPORARY TABLE STORE_MIN_WEEK AS
SELECT DISTINCT
    A.STORE_NBR,
    A.CATEGORY_NBR,
    MIN(A.WEEK_NBR) MIN_WEEK
FROM
    STORE_SALES_RAW A
GROUP BY 1,2
ORDER BY 1,2
;



CREATE OR REPLACE TEMPORARY TABLE STORE_WEEKS AS
SELECT DISTINCT
    A.STORE_NBR,
    A.CATEGORY_NBR,
    A.MIN_WEEK,
    B.WEEK_NBR,
    B.DATE_DT
FROM
    STORE_MIN_WEEK A
LEFT JOIN
    WEEKS B ON B.WEEK_NBR >= A.MIN_WEEK
WHERE 
    B.DATE_DT IS NOT NULL
;




CREATE OR REPLACE TEMPORARY TABLE STORE_SALES AS
SELECT
    A.STORE_NBR,
    A.CATEGORY_NBR,
    A.CATEGORY_DSC,
    A.SKU_NBR,
    'TOTAL SALES' MODEL,
    B.DATE_DT,
    A.WEEK_NBR,
    SUM(IFNULL(A.ITEMS_QTY,0)) ITEMS_QTY
FROM
    STORE_SALES_RAW_DETAIL A,
    WEEKS B
WHERE 
    A.WEEK_NBR = B.WEEK_NBR
GROUP BY 1,2,3,4,6,7
ORDER BY 1,2,3,4,6,7
;


------------------------------------------------------------------------------------------------
CREATE OR REPLACE TEMPORARY TABLE STORE_SALES_2 AS
SELECT 
    A.STORE_NBR,
    A.CATEGORY_NBR,
    A.DATE_DT,
    SUM(IFNULL(B.ITEMS_QTY,0)) ITEMS_QTY
FROM
    STORE_WEEKS A
LEFT JOIN
    STORE_SALES B ON A.STORE_NBR = B.STORE_NBR AND A.CATEGORY_NBR = B.CATEGORY_NBR AND A.DATE_DT = B.DATE_DT
GROUP BY 1,2,3
ORDER BY 1,2,3
;


CREATE OR REPLACE TEMPORARY TABLE STORE_HYP_INPUT AS
SELECT
    TO_CHAR(CONCAT(A.STORE_NBR,'_',A.CATEGORY_NBR)) SKU_CAT_NBR,
    A.DATE_DT,
    TO_DOUBLE(SUM(A.ITEMS_QTY)) ITEMS_QTY
FROM
    STORE_SALES_2 A
GROUP BY 1,2
ORDER BY 1,2
;



-------------------------------------------------------------------------------------------------

CREATE OR REPLACE TEMPORARY TABLE STORE_HYP_OUTPUT1 AS
SELECT p.*
FROM STORE_HYP_INPUT
    ,TABLE(OTCHS_HYPERPARAMS_FINDER1("SKU_CAT_NBR","DATE_DT", "ITEMS_QTY") OVER (PARTITION BY "SKU_CAT_NBR")) p
;



CREATE OR REPLACE TEMPORARY TABLE STORE_FCST_INPUT1 AS
SELECT
    TO_CHAR(A.SKU_CAT_NBR) SKU_CAT_NBR,
    A.DATE_DT,
    TO_DOUBLE(A.ITEMS_QTY) ITEMS_QTY,
    TO_CHAR(B.BEST_PARAMS) BEST_PARAMS
FROM
    STORE_HYP_INPUT A    
LEFT JOIN
    STORE_HYP_OUTPUT1 B ON A.SKU_CAT_NBR = B.PLAN_STR
WHERE 
    NOT STARTSWITH(B.BEST_PARAMS, 'Error')
;



CREATE OR REPLACE TEMPORARY TABLE STR_SALES_FCST_OUTPUT1 AS
SELECT p.*
FROM STORE_FCST_INPUT1
    , TABLE(OTCHS_SALES_FORECAST("SKU_CAT_NBR","DATE_DT", "ITEMS_QTY", 26, "BEST_PARAMS") OVER (PARTITION BY "SKU_CAT_NBR")) p
;


CREATE OR REPLACE TEMPORARY TABLE STORE_CAT_OUTPUT1 AS
SELECT
    A.PLAN_STR,
    MAX(A.FORECAST_QTY) MAX_FCST,
    MAX(B.ITEMS_QTY) MAX_OBS,
    (MAX(A.FORECAST_QTY) - MAX(B.ITEMS_QTY)) DIFF
FROM
    STR_SALES_FCST_OUTPUT1 A
LEFT JOIN
    STORE_HYP_INPUT B ON A.PLAN_STR = B.SKU_CAT_NBR
GROUP BY 1
HAVING 
    DIV0NULL(ABS(MAX(A.FORECAST_QTY) - MAX(B.ITEMS_QTY)), MAX(B.ITEMS_QTY))<=1
ORDER BY 4 
;



CREATE OR REPLACE TEMPORARY TABLE STR_FCST_OUTPUT1 AS
SELECT
    * 
FROM STR_SALES_FCST_OUTPUT1
WHERE
    PLAN_STR IN (SELECT DISTINCT PLAN_STR FROM STORE_CAT_OUTPUT1)
;

----------------------------------------------------------------------------------------
CREATE OR REPLACE TEMPORARY TABLE STORE_HYP_INPUT2 AS
SELECT
    *
FROM 
    STORE_HYP_INPUT
WHERE
    SKU_CAT_NBR NOT IN (SELECT DISTINCT PLAN_STR FROM STR_FCST_OUTPUT1) 
;


CREATE OR REPLACE TEMPORARY TABLE STORE_HYP_OUTPUT2 AS
SELECT p.*
FROM STORE_HYP_INPUT2
    ,TABLE(OTCHS_HYPERPARAMS_FINDER2("SKU_CAT_NBR","DATE_DT", "ITEMS_QTY") OVER (PARTITION BY "SKU_CAT_NBR")) p
;



CREATE OR REPLACE TEMPORARY TABLE STORE_FCST_INPUT2 AS
SELECT
    TO_CHAR(A.SKU_CAT_NBR) SKU_CAT_NBR,
    A.DATE_DT,
    TO_DOUBLE(A.ITEMS_QTY) ITEMS_QTY,
    TO_CHAR(B.BEST_PARAMS) BEST_PARAMS
FROM
    STORE_HYP_INPUT2 A    
LEFT JOIN
    STORE_HYP_OUTPUT2 B ON A.SKU_CAT_NBR = B.PLAN_STR
WHERE 
    NOT STARTSWITH(B.BEST_PARAMS, 'Error')
;



CREATE OR REPLACE TEMPORARY TABLE STR_SALES_FCST_OUTPUT2 AS
SELECT p.*
FROM STORE_FCST_INPUT2
    , TABLE(OTCHS_SALES_FORECAST("SKU_CAT_NBR","DATE_DT", "ITEMS_QTY", 26, "BEST_PARAMS") OVER (PARTITION BY "SKU_CAT_NBR")) p
;


CREATE OR REPLACE TEMPORARY TABLE STORE_CAT_OUTPUT2 AS
SELECT
    A.PLAN_STR,
    MAX(A.FORECAST_QTY) MAX_FCST,
    MAX(B.ITEMS_QTY) MAX_OBS,
    (MAX(A.FORECAST_QTY) - MAX(B.ITEMS_QTY)) DIFF
FROM
    STR_SALES_FCST_OUTPUT2 A
LEFT JOIN
    STORE_HYP_INPUT2 B ON A.PLAN_STR = B.SKU_CAT_NBR
GROUP BY 1
HAVING 
    DIV0NULL(ABS(MAX(A.FORECAST_QTY) - MAX(B.ITEMS_QTY)), MAX(B.ITEMS_QTY))<=1
ORDER BY 4 
;



CREATE OR REPLACE TEMPORARY TABLE STR_FCST_OUTPUT2 AS
SELECT
    * 
FROM STR_SALES_FCST_OUTPUT2
WHERE
    PLAN_STR IN (SELECT DISTINCT PLAN_STR FROM STORE_CAT_OUTPUT2)
;

---------------------------------------------------------------------------------------------
CREATE OR REPLACE TEMPORARY TABLE STORE_HYP_INPUT3 AS
SELECT
    *
FROM 
    STORE_HYP_INPUT
WHERE
    SKU_CAT_NBR NOT IN (SELECT DISTINCT PLAN_STR FROM STR_FCST_OUTPUT1) 
    AND SKU_CAT_NBR NOT IN (SELECT DISTINCT PLAN_STR FROM STR_FCST_OUTPUT2)
;


CREATE OR REPLACE TEMPORARY TABLE STR_FCST_OUTPUT3 AS
SELECT p.*
FROM STORE_HYP_INPUT3
    , TABLE(OTCHS_SALES_MA_FCST_PLAN_WK("SKU_CAT_NBR","DATE_DT", "ITEMS_QTY", 26, 3) OVER (PARTITION BY "SKU_CAT_NBR")) p
;

------------------------------------------------------------------------------------
CREATE OR REPLACE TEMPORARY TABLE STR_SALES_FCST_OUTPUT AS
SELECT * FROM STR_FCST_OUTPUT1
UNION ALL
SELECT * FROM STR_FCST_OUTPUT2
UNION ALL
SELECT * FROM STR_FCST_OUTPUT3
;


-------------------------------------------------------------------------------------------------------

CREATE OR REPLACE TEMPORARY TABLE OTCHS_FCST_STORE_CAT_WK AS
SELECT 
    SUBSTRING(PLAN_STR, 1, POSITION('_' IN PLAN_STR)-1) STORE_NBR,
    SUBSTRING(PLAN_STR, LENGTH(PLAN_STR) - POSITION('_' IN REVERSE(PLAN_STR))+2) CATEGORY_NBR,
    A.FORECAST_DATE ORDER_DATE,
    B.FISCAL_WEEK_NBR WEEK_NBR,
    FORECAST_QTY FORECAST_UNITS
FROM
    STR_SALES_FCST_OUTPUT A
LEFT JOIN
    CORE_FSSC.CURATED_CALENDAR.FISCAL_WEEK B ON A.FORECAST_DATE = B.START_DT
;



CREATE OR REPLACE TEMPORARY TABLE STORE_CAT_SKU_PROP AS
SELECT
    A.STORE_NBR,
    A.CATEGORY_NBR,
    A.SKU_NBR,
    SUM(A.ITEMS_QTY) AS ITEMS_QTY
FROM
    STORE_SALES_RAW_DETAIL A
GROUP BY 1,2,3
ORDER BY 1,2,3
;



CREATE OR REPLACE TEMPORARY TABLE STORE_CAT_PROP AS
SELECT
    A.STORE_NBR,
    A.CATEGORY_NBR,
    SUM(A.ITEMS_QTY) AS ITEMS_QTY
FROM
    STORE_CAT_SKU_PROP A
GROUP BY 1,2
ORDER BY 1,2
;


CREATE OR REPLACE TEMPORARY TABLE STORE_PROP AS
SELECT
    A.STORE_NBR,
    A.CATEGORY_NBR,
    A.SKU_NBR,
    A.ITEMS_QTY NUMERATOR,
    B.ITEMS_QTY DENOMINATOR,
    DIV0NULL(A.ITEMS_QTY,B.ITEMS_QTY) PROPORTION
FROM
    STORE_CAT_SKU_PROP A,
    STORE_CAT_PROP B
WHERE
    A.STORE_NBR = B.STORE_NBR 
    AND A.CATEGORY_NBR = B.CATEGORY_NBR 
;



CREATE OR REPLACE TEMPORARY TABLE STORE_SALES_FCST_DETAIL AS
SELECT
    A.STORE_NBR,
    A.CATEGORY_NBR,
    B.SKU_NBR,
    A.ORDER_DATE,
    A.WEEK_NBR,
    B.PROPORTION,
    A.FORECAST_UNITS,
    (B.PROPORTION * A.FORECAST_UNITS) ITEMS_QTY
FROM
    OTCHS_FCST_STORE_CAT_WK A,
    STORE_PROP B
WHERE
    A.STORE_NBR = B.STORE_NBR 
    AND A.CATEGORY_NBR = B.CATEGORY_NBR
;



-------------------------------------------------------------------------------------------------------


CREATE OR REPLACE TABLE STORE_SALES_FCST AS
SELECT
    A.STORE_NBR,
    A.CATEGORY_NBR,
    B.CATEGORY_DSC,
    A.SKU_NBR,
    'STORE SALES FORECAST' MODEL,
    A.ORDER_DATE,
    A.WEEK_NBR,
    A.ITEMS_QTY
FROM 
    STORE_SALES_FCST_DETAIL A,
    CORE_FSSC.CURATED_PRODUCT.SKU B
WHERE
    A.SKU_NBR = B.SKU_NBR

ORDER BY 1,2,3,4,6
;


-------------------------------------------------------------------------------------------
CREATE OR REPLACE TABLE STORE_HIST_WO_SFS AS
SELECT
    A.STORE_NBR,
    B.CATEGORY_NBR,
    B.CATEGORY_DSC,
    A.SKU_NBR,
    'STORE SALES WO SFS' MODEL,
    C.DATE_DT ORDER_DATE,
    A.WEEK_NBR,
    SUM(IFF(A.SCAN_QTY<0,0,A.SCAN_QTY)) ITEMS_QTY
FROM
    CORE_FSSC.CURATED_SALES.POS_WK_EVT_SKU_STR A,
    CORE_FSSC.CURATED_PRODUCT.SKU B,
    WEEKS C

WHERE
    A.SKU_NBR IN (SELECT DISTINCT SKU_NBR FROM OTCHS_STR_SKU)
    AND A.STORE_NBR NOT IN (10735,11458,11511,11512)
    AND A.WEEK_NBR = C.WEEK_NBR
    AND A.SKU_NBR = B.SKU_NBR
    AND A.CUSTOMER_DELIVERY_TYPE_CD <> 2 AND A.CUSTOMER_ORDER_TYPE_CD <> 2 --Exclude SFS
GROUP BY 1,2,3,4,6,7
ORDER BY 1,2,3,4,6,7
;

----------------------------------------------------------------------------------------------

CREATE OR REPLACE TABLE OTCHS_STR_BY_FCST AS
SELECT
    A.STORE_NBR,
    B.CATEGORY_NBR,
    B.CATEGORY_DSC,
    A.SKU_NBR,
    'BY FORECAST' MODEL,
    DATE_TRUNC('WEEK', DATEADD(DAY, 1, A.FORECAST_START_DT)) - INTERVAL'1 DAY' ORDER_DATE,
    C.FISCAL_WEEK_NBR WEEK_NBR,
    SUM(A.FORECAST_QTY) ITEMS_QTY
FROM 
    SEM_FSSC.COMMON_FSSC.JDFR_FCST_DT_STR_SKU_26_ALL_V A,
    CORE_FSSC.CURATED_PRODUCT.SKU B,
    CORE_FSSC.CURATED_CALENDAR.FISCAL_WEEK C
    
WHERE 
    A.SKU_NBR IN (SELECT DISTINCT SKU_NBR FROM OTCHS_STR_SKU)
    AND A.STORE_NBR NOT IN (10735,11458,11511,11512)
    AND A.SKU_NBR = B.SKU_NBR
    AND DATE_TRUNC('WEEK', DATEADD(DAY, 1, A.FORECAST_START_DT)) - INTERVAL'1 DAY' = C.START_DT
    AND A.FORECAST_TYPE_CD IN (1,4,5)
    AND A.FORECAST_START_DT > TO_DATE('2024-08-03') --DATEADD(day, -1 * (EXTRACT(DAYOFWEEK_ISO FROM CURRENT_DATE()) % 7 + 1), CURRENT_DATE())
GROUP BY 1,2,3,4,6,7
;




CREATE OR REPLACE TEMPORARY TABLE FORECAST_LIFTS AS
SELECT 
    A.STORE_NBR,
    A.CATEGORY_NBR,
    A.CATEGORY_DSC,
    A.SKU_NBR,
    'UPDATED BY FCST' MODEL,
    A.ORDER_DATE,
    A.WEEK_NBR,
    GREATEST(IFNULL(A.ITEMS_QTY,0),IFNULL(B.ITEMS_QTY,0)) ITEMS_QTY   
FROM 
    OTCHS_STR_BY_FCST A
LEFT JOIN 
    STORE_SALES_FCST B ON A.STORE_NBR = B.STORE_NBR AND A.CATEGORY_NBR = B.CATEGORY_NBR AND A.SKU_NBR = B.SKU_NBR AND A.ORDER_DATE = B.ORDER_DATE
;


CREATE OR REPLACE TEMPORARY TABLE OTCHS_STAGE AS
--CREATE OR REPLACE TABLE OTCHS_WALKIN_STORE_FORECAST AS
SELECT * FROM OTCHS_STR_BY_FCST 
UNION
SELECT * FROM STORE_SALES
UNION
SELECT * FROM STORE_SALES_FCST 
UNION
SELECT * FROM FORECAST_LIFTS
UNION
SELECT * FROM STORE_HIST_WO_SFS
;



MERGE INTO OTCHS_WALKIN_STORE_FORECAST AS stg
USING ( 
    SELECT * 
    FROM 
        OTCHS_STAGE 
    ) AS src

ON stg.SKU_NBR = src.SKU_NBR
AND stg.STORE_NBR = src.STORE_NBR
AND stg.MODEL = src.MODEL
AND stg.ORDER_DATE = src.ORDER_DATE

WHEN MATCHED THEN
    UPDATE SET
        stg.ITEMS_QTY = src.ITEMS_QTY
WHEN NOT MATCHED THEN
    INSERT (SKU_NBR, CATEGORY_DSC, STORE_NBR, MODEL, ORDER_DATE, WEEK_NBR, ITEMS_QTY)
    VALUES (SKU_NBR, CATEGORY_DSC, STORE_NBR, MODEL, ORDER_DATE, WEEK_NBR, ITEMS_QTY)
;


----------------------------STORE SALES DASHBOARD -------------------------------------------------------
CREATE OR REPLACE TABLE OTCHS_STORE_FCST_DASHBOARD AS
SELECT
    A.STORE_NBR,
    --A.CATEGORY_DSC,
    A.MODEL,
    A.ORDER_DATE,
    A.WEEK_NBR,
    SUM(ITEMS_QTY) ITEMS_QTY
FROM
    OTCHS_WALKIN_STORE_FORECAST A
WHERE 
    MODEL IN ('UPDATED BY FCST','BY FORECAST','STORE SALES FORECAST','TOTAL SALES') 
GROUP BY 1,2,3,4
ORDER BY 1,2,3,4
;




---------------------------- STORE FORECAST LIFTS -------------------------------------------------------
CREATE OR REPLACE TABLE OTCHS_STORE_LIFT_QTY AS
SELECT
    A.STORE_NBR,
    A.SKU_NBR,
    A.ORDER_DATE FORECAST_START_DATE,
    A.WEEK_NBR,
    CONCAT('EA_OTCHSSTR_',TO_CHAR(A.ORDER_DATE,'YYYYMMDD')) FORECAST_ID,
    'CVS' ENTITY,
    CASE WHEN A.ITEMS_QTY>=B.ITEMS_QTY THEN 0 ELSE (B.ITEMS_QTY-A.ITEMS_QTY) END ITEMS_QTY
FROM
    (SELECT * FROM OTCHS_WALKIN_STORE_FORECAST WHERE MODEL='BY FORECAST') A,
    (SELECT * FROM OTCHS_WALKIN_STORE_FORECAST WHERE MODEL='STORE SALES') B
WHERE
    A.WEEK_NBR = B.WEEK_NBR AND A.SKU_NBR=B.SKU_NBR AND A.STORE_NBR=B.STORE_NBR
    AND A.ITEMS_QTY<B.ITEMS_QTY
    AND A.WEEK_NBR BETWEEN 202449 AND 202452
    AND (B.ITEMS_QTY-A.ITEMS_QTY) >= 0.5
    AND A.SKU_NBR NOT IN (550147,823994,701505,467735)
ORDER BY 1,2,3,4,5
;






/*---------------------------WAPE CALCULATION TABLE-------------------------------------------------------
SELECT
    A.CATEGORY_DSC,
    A.WEEK_NBR,
    A.ORDER_DATE,
    SUM(C.ITEMS_QTY) ACTUALS,
    SUM(A.ITEMS_QTY) BY_FCST,
    SUM(B.ITEMS_QTY) STORE_FCST
FROM
    OTCHS_STR_BY_FCST A,
    STORE_SALES_FCST B,
    STORE_SALES C
    
WHERE
    A.STORE_NBR = B.STORE_NBR AND A.STORE_NBR = C.STORE_NBR
    AND A.SKU_NBR = B.SKU_NBR AND A.SKU_NBR = C.SKU_NBR
    AND A.WEEK_NBR = B.WEEK_NBR AND A.WEEK_NBR = C.WEEK_NBR
    AND A.WEEK_NBR BETWEEN 202427 AND 202436
GROUP BY 1,2,3
ORDER BY 1,2
;
--------------------------------------------------------------------------------------------------------*/




